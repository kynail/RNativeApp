{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  text: {\n    fontWeight: '600'\n  },\n  base: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: 42,\n    borderRadius: 4,\n    paddingHorizontal: 12\n  }\n});\n\nfunction Button(_ref) {\n  var title = _ref.title,\n      _ref$backgroundColor = _ref.backgroundColor,\n      backgroundColor = _ref$backgroundColor === void 0 ? '#000' : _ref$backgroundColor,\n      _ref$titleColor = _ref.titleColor,\n      titleColor = _ref$titleColor === void 0 ? '#fff' : _ref$titleColor,\n      _ref$titleSize = _ref.titleSize,\n      titleSize = _ref$titleSize === void 0 ? 14 : _ref$titleSize,\n      onPress = _ref.onPress,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? '100%' : _ref$width,\n      containerStyle = _ref.containerStyle;\n  return _jsx(Pressable, {\n    onPress: onPress,\n    style: function style(args) {\n      if (args.pressed) {\n        return [styles.base, {\n          opacity: 0.5,\n          backgroundColor: backgroundColor,\n          width: width\n        }, containerStyle];\n      }\n\n      return [styles.base, {\n        opacity: 1,\n        backgroundColor: backgroundColor,\n        width: width\n      }, containerStyle];\n    },\n    children: _jsx(Text, {\n      style: [styles.text, {\n        color: titleColor,\n        fontSize: titleSize\n      }],\n      children: title\n    })\n  });\n}\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string.isRequired,\n  titleColor: PropTypes.string.isRequired,\n  titleSize: PropTypes.number.isRequired,\n  onPress: PropTypes.func.isRequired,\n  width: PropTypes.string.isRequired,\n  containerStyle: PropTypes.string.isRequired\n};\nButton.defautProps = {\n  backgroundColor: '#000',\n  titleColor: '#fff',\n  titleSize: 14,\n  width: '100%'\n};\nexport default Button;","map":{"version":3,"sources":["C:/Users/kadag/epitech/RNativeApp/components/button.js"],"names":["React","PropTypes","styles","StyleSheet","create","text","fontWeight","base","alignItems","justifyContent","minHeight","borderRadius","paddingHorizontal","Button","title","backgroundColor","titleColor","titleSize","onPress","width","containerStyle","args","pressed","opacity","color","fontSize","propTypes","string","isRequired","number","func","defautProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE;AADR,GADyB;AAI/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,QADR;AAEJC,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,SAAS,EAAE,EAHP;AAIJC,IAAAA,YAAY,EAAE,CAJV;AAKJC,IAAAA,iBAAiB,EAAE;AALf;AAJyB,CAAlB,CAAf;;AAaA,SAASC,MAAT,OAQG;AAAA,MAPDC,KAOC,QAPDA,KAOC;AAAA,kCANDC,eAMC;AAAA,MANDA,eAMC,qCANiB,MAMjB;AAAA,6BALDC,UAKC;AAAA,MALDA,UAKC,gCALY,MAKZ;AAAA,4BAJDC,SAIC;AAAA,MAJDA,SAIC,+BAJW,EAIX;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,wBAFDC,KAEC;AAAA,MAFDA,KAEC,2BAFO,MAEP;AAAA,MADDC,cACC,QADDA,cACC;AACD,SACE,KAAC,SAAD;AACE,IAAA,OAAO,EAAEF,OADX;AAEE,IAAA,KAAK,EAAE,eAACG,IAAD,EAAU;AACf,UAAIA,IAAI,CAACC,OAAT,EAAkB;AAChB,eAAO,CACLpB,MAAM,CAACK,IADF,EAEL;AACEgB,UAAAA,OAAO,EAAE,GADX;AAEER,UAAAA,eAAe,EAAfA,eAFF;AAGEI,UAAAA,KAAK,EAALA;AAHF,SAFK,EAOLC,cAPK,CAAP;AASD;;AAED,aAAO,CACLlB,MAAM,CAACK,IADF,EAEL;AACEgB,QAAAA,OAAO,EAAE,CADX;AAEER,QAAAA,eAAe,EAAfA,eAFF;AAGEI,QAAAA,KAAK,EAALA;AAHF,OAFK,EAOLC,cAPK,CAAP;AASD,KAxBH;AAAA,cA0BE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAAClB,MAAM,CAACG,IAAR,EAAc;AAAEmB,QAAAA,KAAK,EAAER,UAAT;AAAqBS,QAAAA,QAAQ,EAAER;AAA/B,OAAd,CAAb;AAAA,gBACGH;AADH;AA1BF,IADF;AAgCD;;AAEDD,MAAM,CAACa,SAAP,GAAmB;AACjBZ,EAAAA,KAAK,EAAEb,SAAS,CAAC0B,MAAV,CAAiBC,UADP;AAEjBb,EAAAA,eAAe,EAAEd,SAAS,CAAC0B,MAAV,CAAiBC,UAFjB;AAGjBZ,EAAAA,UAAU,EAAEf,SAAS,CAAC0B,MAAV,CAAiBC,UAHZ;AAIjBX,EAAAA,SAAS,EAAEhB,SAAS,CAAC4B,MAAV,CAAiBD,UAJX;AAKjBV,EAAAA,OAAO,EAAEjB,SAAS,CAAC6B,IAAV,CAAeF,UALP;AAMjBT,EAAAA,KAAK,EAAElB,SAAS,CAAC0B,MAAV,CAAiBC,UANP;AAOjBR,EAAAA,cAAc,EAAEnB,SAAS,CAAC0B,MAAV,CAAiBC;AAPhB,CAAnB;AAUAf,MAAM,CAACkB,WAAP,GAAqB;AACnBhB,EAAAA,eAAe,EAAE,MADE;AAEnBC,EAAAA,UAAU,EAAE,MAFO;AAGnBC,EAAAA,SAAS,EAAE,EAHQ;AAInBE,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAeN,MAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Pressable, Text } from 'react-native';\nimport PropTypes from 'prop-types';\n\nconst styles = StyleSheet.create({\n  text: {\n    fontWeight: '600',\n  },\n  base: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: 42,\n    borderRadius: 4,\n    paddingHorizontal: 12,\n  },\n});\n\nfunction Button({\n  title,\n  backgroundColor = '#000',\n  titleColor = '#fff',\n  titleSize = 14,\n  onPress,\n  width = '100%',\n  containerStyle,\n}) {\n  return (\n    <Pressable\n      onPress={onPress}\n      style={(args) => {\n        if (args.pressed) {\n          return [\n            styles.base,\n            {\n              opacity: 0.5,\n              backgroundColor,\n              width,\n            },\n            containerStyle,\n          ];\n        }\n\n        return [\n          styles.base,\n          {\n            opacity: 1,\n            backgroundColor,\n            width,\n          },\n          containerStyle,\n        ];\n      }}\n    >\n      <Text style={[styles.text, { color: titleColor, fontSize: titleSize }]}>\n        {title}\n      </Text>\n    </Pressable>\n  );\n}\n\nButton.propTypes = {\n  title: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string.isRequired,\n  titleColor: PropTypes.string.isRequired,\n  titleSize: PropTypes.number.isRequired,\n  onPress: PropTypes.func.isRequired,\n  width: PropTypes.string.isRequired,\n  containerStyle: PropTypes.string.isRequired,\n};\n\nButton.defautProps = {\n  backgroundColor: '#000',\n  titleColor: '#fff',\n  titleSize: 14,\n  width: '100%',\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}