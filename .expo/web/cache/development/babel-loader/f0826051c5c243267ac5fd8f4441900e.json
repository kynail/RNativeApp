{"ast":null,"code":"import React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AntDesign } from '@expo/vector-icons';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  base: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nfunction IconButton(_ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      onPress = _ref.onPress,\n      name = _ref.name;\n  return _jsx(Pressable, {\n    style: function style(args) {\n      if (args.pressed) {\n        return [styles.base, {\n          opacity: 0.5,\n          backgroundColor: 'transparent'\n        }];\n      }\n\n      return [styles.base, {\n        opacity: 1,\n        backgroundColor: 'transparent'\n      }];\n    },\n    onPress: onPress,\n    children: _jsx(AntDesign, {\n      name: name,\n      size: size,\n      color: color\n    })\n  });\n}\n\nIconButton.propTypes = {\n  color: PropTypes.string.isRequired,\n  size: PropTypes.string.isRequired,\n  onPress: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport default IconButton;","map":{"version":3,"sources":["C:/Users/kadag/epitech/RNativeApp/components/iconbutton.js"],"names":["React","AntDesign","PropTypes","styles","StyleSheet","create","base","alignItems","justifyContent","IconButton","color","size","onPress","name","args","pressed","opacity","backgroundColor","propTypes","string","isRequired","func"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,QADR;AAEJC,IAAAA,cAAc,EAAE;AAFZ;AADyB,CAAlB,CAAf;;AAOA,SAASC,UAAT,OAEG;AAAA,MADDC,KACC,QADDA,KACC;AAAA,MADMC,IACN,QADMA,IACN;AAAA,MADYC,OACZ,QADYA,OACZ;AAAA,MADqBC,IACrB,QADqBA,IACrB;AACD,SACE,KAAC,SAAD;AACE,IAAA,KAAK,EAAE,eAACC,IAAD,EAAU;AACf,UAAIA,IAAI,CAACC,OAAT,EAAkB;AAChB,eAAO,CACLZ,MAAM,CAACG,IADF,EAEL;AACEU,UAAAA,OAAO,EAAE,GADX;AAEEC,UAAAA,eAAe,EAAE;AAFnB,SAFK,CAAP;AAOD;;AAED,aAAO,CAACd,MAAM,CAACG,IAAR,EAAc;AAAEU,QAAAA,OAAO,EAAE,CAAX;AAAcC,QAAAA,eAAe,EAAE;AAA/B,OAAd,CAAP;AACD,KAbH;AAcE,IAAA,OAAO,EAAEL,OAdX;AAAA,cAgBE,KAAC,SAAD;AAAW,MAAA,IAAI,EAAEC,IAAjB;AAAuB,MAAA,IAAI,EAAEF,IAA7B;AAAmC,MAAA,KAAK,EAAED;AAA1C;AAhBF,IADF;AAoBD;;AAEDD,UAAU,CAACS,SAAX,GAAuB;AACrBR,EAAAA,KAAK,EAAER,SAAS,CAACiB,MAAV,CAAiBC,UADH;AAErBT,EAAAA,IAAI,EAAET,SAAS,CAACiB,MAAV,CAAiBC,UAFF;AAGrBR,EAAAA,OAAO,EAAEV,SAAS,CAACmB,IAAV,CAAeD,UAHH;AAIrBP,EAAAA,IAAI,EAAEX,SAAS,CAACiB,MAAV,CAAiBC;AAJF,CAAvB;AAOA,eAAeX,UAAf","sourcesContent":["import React from 'react';\nimport { Pressable, StyleSheet } from 'react-native';\nimport { AntDesign } from '@expo/vector-icons';\nimport PropTypes from 'prop-types';\n\nconst styles = StyleSheet.create({\n  base: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nfunction IconButton({\n  color, size, onPress, name,\n}) {\n  return (\n    <Pressable\n      style={(args) => {\n        if (args.pressed) {\n          return [\n            styles.base,\n            {\n              opacity: 0.5,\n              backgroundColor: 'transparent',\n            },\n          ];\n        }\n\n        return [styles.base, { opacity: 1, backgroundColor: 'transparent' }];\n      }}\n      onPress={onPress}\n    >\n      <AntDesign name={name} size={size} color={color} />\n    </Pressable>\n  );\n}\n\nIconButton.propTypes = {\n  color: PropTypes.string.isRequired,\n  size: PropTypes.string.isRequired,\n  onPress: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default IconButton;\n"]},"metadata":{},"sourceType":"module"}